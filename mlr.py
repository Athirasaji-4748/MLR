# -*- coding: utf-8 -*-
"""MLR.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gPGv4GmNUPT9Zz_O7LBZOCRlKg2JsD5Y
"""

#importing libraries
import os
import pandas as pd
import matplotlib.pyplot as plt

from google.colab import drive





drive.mount('/content/drive')

!ls

os.chdir("/content/drive/MyDrive/Colab Notebooks/")

!ls

dataset=pd.read_excel("Folds5x2_pp.xlsx")

dataset.head()

#define x and y 
x=dataset.drop(['PE'],axis=1).values
y=dataset['PE'].values

print(x)

print(y)

#split the data set into training set and test set
from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test= train_test_split(x,y,test_size=0.3,random_state=0)

#train the model on the training set 
from sklearn.linear_model import LinearRegression
ml = LinearRegression()
ml.fit(x_train,y_train)

#predict the test set results
y_pred = ml.predict(x_test)
print(y_pred)

ml.predict([[14.96,41.76,1024.07,73.17]])

#evaluate the model
from sklearn.metrics import r2_score
r2_score(y_test,y_pred)

from matplotlib.font_manager import findSystemFonts
plt.title('Actual Vs Predicted')
plt.xlabel("Actual")
plt.ylabel("Predicted")
plt.scatter(y_test,y_pred)
plt.figure(figsize=(15,10))

pred_y_df=pd.DataFrame({'Actual Value':y_test,'Predicted Value':y_pred,'Difference':y_test-y_pred})
print(pred_y_df)

# # backward elimination 

x_op=x[:,[1,2,3]]

import statsmodels.api as sm 
OLS=sm.OLS(endog=y,exog=x_op).fit()
OLS.summary()

x_op=x[:,[1,2,3]] 
import statsmodels.api as sm 
OLS=sm.OLS(endog=y,exog=x_op).fit()
OLS.summary()

x_op=x[:,[0,3]] 
import statsmodels.api as sm 
OLS=sm.OLS(endog=y,exog=x_op).fit()
OLS.summary()

